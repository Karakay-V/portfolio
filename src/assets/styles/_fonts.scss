// Sora sans-serif font
@font-face {
  font-family: 'SoraVariable';
  src: url('../fonts/sora/Sora-VariableFont_wght.ttf') format('truetype');
  font-weight: 100 800; // Sora supports a range from 100 to 800
  font-style: normal;
  font-display: swap;
}

// Optional SCSS variable
$sora-font-family: 'SoraVariable', sans-serif;

//FONTS

// Sora variations
@mixin sora-font($weight: 400) {
  font-family: $sora-font-family;
  font-weight: $weight;
}


@mixin responsive-font($pc-size, $mob-size, $max-width) {
  $add-size: $pc-size - $mob-size;
  $max-width: $max-width - 320;
  font-size: calc(#{$mob-size + px} + #{$add-size} * ((100vw - 320px) / #{$max-width}));
}


// Prevent user text selecting
@mixin prevent-selecting {
  -webkit-user-select: none;      // Safari
  -moz-user-select: none;         // Firefox
  -ms-user-select: none;          // IE10+
  user-select: none;              // Standart
}


// Trimming long text with ellipsis replacement
@mixin hide-overflowed-text {
  text-overflow: ellipsis;
  white-space: nowrap;
  overflow: hidden;
  width: 100%;
}

// Trimming long text with ellipsis replacement, but allow multiple lines of text
@mixin hide-overflowed-text-multiline($lines: 2) {
  display: -webkit-box;
  -webkit-line-clamp: $lines;
  -webkit-box-orient: vertical;
  text-overflow: ellipsis;
  overflow: hidden;
}

// Adding stroke to text
@mixin stroke($width, $colour: #000) {
  $shadows: ();

  // Генеруємо точки навколо тексту у квадраті $width * $width
  @for $x from -$width through $width {
    @for $y from -$width through $width {
      // Пропускаємо центр (0, 0), щоб не дублювати fill
      @if $x != 0 or $y != 0 {
        $shadows: append($shadows, #{$x}px #{$y}px 0 #{$colour}, comma);
      }
    }
  }

  text-shadow: $shadows;
}